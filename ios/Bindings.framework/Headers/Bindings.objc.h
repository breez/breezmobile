// Objective-C API for talking to github.com/breez/breez/bindings Go package.
//   gobind -lang=objc github.com/breez/breez/bindings
//
// File is generated by gobind. Do not edit.

#ifndef __Bindings_H__
#define __Bindings_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"


@class BindingsBreezLogger;
@class BindingsNativeBackupProviderBridge;
@class BindingsRPC;
@protocol BindingsAppServices;
@class BindingsAppServices;
@protocol BindingsBackupService;
@class BindingsBackupService;
@protocol BindingsChannelsWatcherJobController;
@class BindingsChannelsWatcherJobController;
@protocol BindingsJobController;
@class BindingsJobController;
@protocol BindingsLogger;
@class BindingsLogger;
@protocol BindingsNativeBackupProvider;
@class BindingsNativeBackupProvider;

@protocol BindingsAppServices <NSObject>
- (NSString* _Nonnull)backupProviderName;
- (NSString* _Nonnull)backupProviderSignIn:(NSError* _Nullable* _Nullable)error;
- (void)notify:(NSData* _Nullable)notificationEvent;
@end

@protocol BindingsBackupService <NSObject>
- (BOOL)backup:(NSString* _Nullable)files nodeID:(NSString* _Nullable)nodeID backupID:(NSString* _Nullable)backupID error:(NSError* _Nullable* _Nullable)error;
@end

@protocol BindingsChannelsWatcherJobController <NSObject>
- (BOOL)run:(BOOL* _Nullable)ret0_ error:(NSError* _Nullable* _Nullable)error;
- (void)stop;
@end

@protocol BindingsJobController <NSObject>
- (BOOL)run:(NSError* _Nullable* _Nullable)error;
- (void)stop;
@end

@protocol BindingsLogger <NSObject>
- (void)log:(NSString* _Nullable)msg lvl:(NSString* _Nullable)lvl;
@end

@protocol BindingsNativeBackupProvider <NSObject>
- (NSString* _Nonnull)availableSnapshots:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)downloadBackupFiles:(NSString* _Nullable)nodeID backupID:(NSString* _Nullable)backupID error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)uploadBackupFiles:(NSString* _Nullable)file nodeID:(NSString* _Nullable)nodeID encryptionType:(NSString* _Nullable)encryptionType error:(NSError* _Nullable* _Nullable)error;
@end

/**
 * BreezLogger is the implementation of Logger
 */
@interface BindingsBreezLogger : NSObject <goSeqRefInterface, BindingsLogger> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
/**
 * Log writs to the centeral log file
 */
- (void)log:(NSString* _Nullable)msg lvl:(NSString* _Nullable)lvl;
@end

/**
 * NativeBackupProviderBridge is a bridge for using a native implemented provider in the backup manager.
 */
@interface BindingsNativeBackupProviderBridge : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped method NativeBackupProviderBridge.AvailableSnapshots with unsupported parameter or return types

// skipped method NativeBackupProviderBridge.DownloadBackupFiles with unsupported parameter or return types

/**
 * UploadBackupFiles is called when files needs to be uploaded as part of the backup
 */
- (NSString* _Nonnull)uploadBackupFiles:(NSString* _Nullable)file nodeID:(NSString* _Nullable)nodeID encryptionType:(NSString* _Nullable)encryptionType error:(NSError* _Nullable* _Nullable)error;
@end

@interface BindingsRPC : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped method RPC.AddFundInit with unsupported parameter or return types

// skipped method RPC.AddInvoice with unsupported parameter or return types

// skipped method RPC.ConnectToLSP with unsupported parameter or return types

// skipped method RPC.GetFundStatus with unsupported parameter or return types

// skipped method RPC.GetLSPList with unsupported parameter or return types

// skipped method RPC.ListPayments with unsupported parameter or return types

// skipped method RPC.PayInvoice with unsupported parameter or return types

// skipped method RPC.RestartDaemon with unsupported parameter or return types

- (void)start;
@end

@interface Bindings : NSObject
+ (NSError* _Nullable) errorForceBootstrap;
+ (void) setErrorForceBootstrap:(NSError* _Nullable)v;

+ (NSError* _Nullable) errorForceRescan;
+ (void) setErrorForceRescan:(NSError* _Nullable)v;

@end

/**
 * AddFundsInit is part of the binding inteface which is delegated to breez.AddFundsInit
 */
FOUNDATION_EXPORT NSData* _Nullable BindingsAddFundsInit(NSData* _Nullable initRequest, NSError* _Nullable* _Nullable error);

/**
 * AddInvoice is part of the binding inteface which is delegated to breez.AddInvoice
 */
FOUNDATION_EXPORT NSData* _Nullable BindingsAddInvoice(NSData* _Nullable invoice, NSError* _Nullable* _Nullable error);

/**
 * AvailableSnapshots is part of the binding inteface which is delegated to breez.AvailableSnapshots
 */
FOUNDATION_EXPORT NSString* _Nonnull BindingsAvailableSnapshots(NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull BindingsBackupFiles(NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable BindingsCheckLSPClosedChannelMismatch(NSData* _Nullable request, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT BOOL BindingsCheckVersion(NSError* _Nullable* _Nullable error);

/**
 * ConnectAccount is part of the binding inteface which is delegated to breez.ConnectAccount
 */
FOUNDATION_EXPORT BOOL BindingsConnectAccount(NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT BOOL BindingsConnectDirectToLnurl(NSData* _Nullable channel, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT BOOL BindingsConnectToLSP(NSString* _Nullable id_, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT BOOL BindingsConnectToLSPPeer(NSString* _Nullable id_, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT BOOL BindingsConnectToLnurl(NSString* _Nullable lnurl, NSError* _Nullable* _Nullable error);

/**
 * CreateRatchetSession is part of the binding inteface which is delegated to breez.CreateRatchetSession
 */
FOUNDATION_EXPORT NSData* _Nullable BindingsCreateRatchetSession(NSData* _Nullable request, NSError* _Nullable* _Nullable error);

/**
 * DaemonReady returns the status of the daemon
 */
FOUNDATION_EXPORT BOOL BindingsDaemonReady(void);

/**
 * DecodePaymentRequest is part of the binding inteface which is delegated to breez.DecodePaymentRequest
 */
FOUNDATION_EXPORT NSData* _Nullable BindingsDecodePaymentRequest(NSString* _Nullable paymentRequest, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT BOOL BindingsDeleteGraph(NSError* _Nullable* _Nullable error);

/**
 * DownloadBackup is part of the binding inteface which is delegated to breez.DownloadBackup
 */
FOUNDATION_EXPORT NSData* _Nullable BindingsDownloadBackup(NSString* _Nullable nodeID, NSError* _Nullable* _Nullable error);

/**
 * EnableAccount is part of the binding inteface which is delegated to breez.EnableAccount
 */
FOUNDATION_EXPORT BOOL BindingsEnableAccount(BOOL enabled, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable BindingsFetchLnurl(NSString* _Nullable lnurl, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable BindingsFetchReverseSwap(NSString* _Nullable hash, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull BindingsFinishLNURLAuth(NSData* _Nullable request, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable BindingsFinishLNURLPay(NSData* _Nullable request, NSError* _Nullable* _Nullable error);

/**
 * GetAccountInfo is part of the binding inteface which is delegated to breez.GetAccountInfo
 */
FOUNDATION_EXPORT NSData* _Nullable BindingsGetAccountInfo(NSError* _Nullable* _Nullable error);

/**
 * GetDefaultOnChainFeeRate is part of the binding inteface which is delegated to breez.GetDefaultOnChainFeeRate
 */
FOUNDATION_EXPORT BOOL BindingsGetDefaultOnChainFeeRate(int64_t* _Nullable ret0_, NSError* _Nullable* _Nullable error);

/**
 * GetFundStatus is part of the binding inteface which is delegated to breez.GetFundStatus
 */
FOUNDATION_EXPORT NSData* _Nullable BindingsGetFundStatus(NSString* _Nullable notificationToken, NSError* _Nullable* _Nullable error);

/**
 * GetLogPath is part of the binding inteface which is delegated to breez.GetLogPath
 */
FOUNDATION_EXPORT NSString* _Nonnull BindingsGetLogPath(void);

/**
 * GetLogger creates a logger that logs to the same breez central log file
 */
FOUNDATION_EXPORT id<BindingsLogger> _Nullable BindingsGetLogger(NSString* _Nullable appDir, NSError* _Nullable* _Nullable error);

/**
 * GetPaymentRequestHash is part of the binding inteface which is delegated to breez.GetPaymentRequestHash
 */
FOUNDATION_EXPORT NSString* _Nonnull BindingsGetPaymentRequestHash(NSString* _Nullable paymentRequest, NSError* _Nullable* _Nullable error);

/**
 * GetPayments is part of the binding inteface which is delegated to breez.GetPayments
 */
FOUNDATION_EXPORT NSData* _Nullable BindingsGetPayments(NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable BindingsGetPeers(NSError* _Nullable* _Nullable error);

/**
 * GetRelatedInvoice is part of the binding inteface which is delegated to breez.GetRelatedInvoice
 */
FOUNDATION_EXPORT NSData* _Nullable BindingsGetRelatedInvoice(NSString* _Nullable paymentRequest, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable BindingsGetTxSpentURL(NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull BindingsGraphURL(NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT BOOL BindingsHasClosedChannels(BOOL* _Nullable ret0_, NSError* _Nullable* _Nullable error);

/**
 * Init initialize lightning client
 */
FOUNDATION_EXPORT BOOL BindingsInit(NSString* _Nullable tempDir, NSString* _Nullable workingDir, id<BindingsAppServices> _Nullable services, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable BindingsLSPActivity(NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable BindingsLSPList(NSError* _Nullable* _Nullable error);

/**
 * LastSyncedHeaderTimestamp returns the last header the node is synced to.
 */
FOUNDATION_EXPORT int64_t BindingsLastSyncedHeaderTimestamp(void);

/**
 * Log is a function that uses the breez logger
 */
FOUNDATION_EXPORT void BindingsLog(NSString* _Nullable msg, NSString* _Nullable lvl);

FOUNDATION_EXPORT BOOL BindingsMaxReverseSwapAmount(int64_t* _Nullable ret0_, NSError* _Nullable* _Nullable error);

/**
 * NewClosedChannelsJob starts a job to download the list of closed channels.
The daemon closes itself automatically when reaching this state.
 */
FOUNDATION_EXPORT id<BindingsJobController> _Nullable BindingsNewClosedChannelsJob(NSString* _Nullable workingDir, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull BindingsNewReverseSwap(NSData* _Nullable request, NSError* _Nullable* _Nullable error);

/**
 * NewSyncJob starts breez only to reach synchronized state.
The daemon closes itself automatically when reaching this state.
 */
FOUNDATION_EXPORT id<BindingsChannelsWatcherJobController> _Nullable BindingsNewSyncJob(NSString* _Nullable workingDir, NSError* _Nullable* _Nullable error);

/**
 * OnResume just calls the breez.OnResume
 */
FOUNDATION_EXPORT void BindingsOnResume(void);

FOUNDATION_EXPORT BOOL BindingsPayReverseSwap(NSData* _Nullable request, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT void BindingsPopulateChannelPolicy(void);

FOUNDATION_EXPORT BOOL BindingsPublishTransaction(NSData* _Nullable tx, NSError* _Nullable* _Nullable error);

/**
 * RatchetDecrypt is part of the binding inteface which is delegated to breez.RatchetDecrypt
 */
FOUNDATION_EXPORT NSString* _Nonnull BindingsRatchetDecrypt(NSData* _Nullable request, NSError* _Nullable* _Nullable error);

/**
 * RatchetEncrypt is part of the binding inteface which is delegated to breez.RatchetEncrypt
 */
FOUNDATION_EXPORT NSString* _Nonnull BindingsRatchetEncrypt(NSData* _Nullable request, NSError* _Nullable* _Nullable error);

/**
 * RatchetSessionInfo is part of the binding inteface which is delegated to breez.RatchetSessionInfo
 */
FOUNDATION_EXPORT NSData* _Nullable BindingsRatchetSessionInfo(NSString* _Nullable sessionID, NSError* _Nullable* _Nullable error);

/**
 * RatchetSessionSetInfo is part of the binding inteface which is delegated to breez.RatchetSessionSetInfo
 */
FOUNDATION_EXPORT BOOL BindingsRatchetSessionSetInfo(NSData* _Nullable request, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable BindingsRate(NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull BindingsReceiverNode(NSError* _Nullable* _Nullable error);

/**
 * Refund transfers the funds in address to the user destination address
 */
FOUNDATION_EXPORT NSString* _Nonnull BindingsRefund(NSData* _Nullable refundRequest, NSError* _Nullable* _Nullable error);

/**
 * RefundFees transfers the funds in address to the user destination address
 */
FOUNDATION_EXPORT BOOL BindingsRefundFees(NSData* _Nullable refundRequest, int64_t* _Nullable ret0_, NSError* _Nullable* _Nullable error);

/**
 * RegisterChannelOpenedNotification is part of the binding inteface which is delegated to breez.RegisterChannelOpenedNotification
 */
FOUNDATION_EXPORT BOOL BindingsRegisterChannelOpenedNotification(NSString* _Nullable token, NSError* _Nullable* _Nullable error);

/**
 * RegisterNativeBackupProvider registered a native backup provider
 */
FOUNDATION_EXPORT void BindingsRegisterNativeBackupProvider(NSString* _Nullable name, id<BindingsNativeBackupProvider> _Nullable provider);

/**
 * RegisterPeriodicSync is part of the binding inteface which is delegated to breez.RegisterPeriodicSync
 */
FOUNDATION_EXPORT BOOL BindingsRegisterPeriodicSync(NSString* _Nullable token, NSError* _Nullable* _Nullable error);

/**
 * RegisterReceivePaymentReadyNotification is part of the binding inteface which is delegated to breez.RegisterReceivePaymentReadyNotification
 */
FOUNDATION_EXPORT BOOL BindingsRegisterReceivePaymentReadyNotification(NSString* _Nullable token, NSError* _Nullable* _Nullable error);

/**
 * RemoveFund is part of the binding inteface which is delegated to breez.RemoveFund
 */
FOUNDATION_EXPORT NSData* _Nullable BindingsRemoveFund(NSData* _Nullable removeFundRequest, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT void BindingsRequestAppDataBackup(void);

/**
 * RequestBackup triggers breez RequestBackup
 */
FOUNDATION_EXPORT void BindingsRequestBackup(void);

FOUNDATION_EXPORT NSData* _Nullable BindingsResetClosedChannelChainInfo(NSData* _Nullable request, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT BOOL BindingsResetUnconfirmedReverseSwapClaimTransaction(NSError* _Nullable* _Nullable error);

/**
 * RestartDaemon attempts to restart the daemon service.
 */
FOUNDATION_EXPORT BOOL BindingsRestartDaemon(NSError* _Nullable* _Nullable error);

/**
 * RestoreBackup is part of the binding inteface which is delegated to breez.RestoreBackup
 */
FOUNDATION_EXPORT BOOL BindingsRestoreBackup(NSString* _Nullable nodeID, NSData* _Nullable encryptionKey, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable BindingsReverseSwapClaimFeeEstimates(NSString* _Nullable claimAddress, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable BindingsReverseSwapInfo(NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable BindingsReverseSwapPayments(NSError* _Nullable* _Nullable error);

/**
 * SendCommand is part of the binding inteface which is delegated to breez.SendPaymentForRequest
 */
FOUNDATION_EXPORT NSString* _Nonnull BindingsSendCommand(NSString* _Nullable command, NSError* _Nullable* _Nullable error);

/**
 * SendPaymentFailureBugReport is part of the binding inteface which is delegated to breez.SendPaymentFailureBugReport
 */
FOUNDATION_EXPORT BOOL BindingsSendPaymentFailureBugReport(NSString* _Nullable report, NSError* _Nullable* _Nullable error);

/**
 * SendPaymentForRequest is part of the binding inteface which is delegated to breez.SendPaymentForRequest
 */
FOUNDATION_EXPORT NSData* _Nullable BindingsSendPaymentForRequest(NSData* _Nullable payInvoiceRequest, NSError* _Nullable* _Nullable error);

/**
 * SendSpontaneousPayment is part of the binding inteface which is delegated to breez.SendSpontaneousPayment
 */
FOUNDATION_EXPORT NSData* _Nullable BindingsSendSpontaneousPayment(NSData* _Nullable spontaneousPayment, NSError* _Nullable* _Nullable error);

/**
 * SendWalletCoins is part of the binding inteface which is delegated to breez.SendWalletCoins
 */
FOUNDATION_EXPORT NSString* _Nonnull BindingsSendWalletCoins(NSData* _Nullable sendCoinsRequest, NSError* _Nullable* _Nullable error);

/**
 * SetBackupEncryptionKey sets the security key to the backup manager so it
can be used in encrypting backup files.
 */
FOUNDATION_EXPORT BOOL BindingsSetBackupEncryptionKey(NSData* _Nullable key, NSString* _Nullable encryptionType, NSError* _Nullable* _Nullable error);

/**
 * SetBackupProvider sets a new backup provider backend.
 */
FOUNDATION_EXPORT BOOL BindingsSetBackupProvider(NSString* _Nullable providerName, NSString* _Nullable authData, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT BOOL BindingsSetNonBlockingUnconfirmedSwaps(NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT BOOL BindingsSetPeers(NSData* _Nullable request, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT BOOL BindingsSetReverseSwapClaimFee(NSData* _Nullable request, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT BOOL BindingsSetTxSpentURL(NSData* _Nullable request, NSError* _Nullable* _Nullable error);

/**
 * Start the lightning client
 */
FOUNDATION_EXPORT BOOL BindingsStart(NSError* _Nullable* _Nullable error);

/**
 * Stop the lightning client
 */
FOUNDATION_EXPORT void BindingsStop(void);

FOUNDATION_EXPORT NSData* _Nullable BindingsSweepAllCoinsTransactions(NSString* _Nullable address, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT BOOL BindingsSyncGraphFromFile(NSString* _Nullable sourceFilePath, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable BindingsSyncLSPChannels(NSData* _Nullable request, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT BOOL BindingsTestPeer(NSString* _Nullable peer, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT BOOL BindingsTestTxSpentURL(NSString* _Nullable txSpentURL, NSError* _Nullable* _Nullable error);

/**
 * unconfirmedChannelsStatus
 */
FOUNDATION_EXPORT NSData* _Nullable BindingsUnconfirmedChannelsStatus(NSData* _Nullable request, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull BindingsUnconfirmedReverseSwapClaimTransaction(NSError* _Nullable* _Nullable error);

/**
 * ValidateAddress is part of the binding inteface which is delegated to breez.ValidateAddress
 */
FOUNDATION_EXPORT BOOL BindingsValidateAddress(NSString* _Nullable address, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT BOOL BindingsWithdrawLnurl(NSString* _Nullable bolt11, NSError* _Nullable* _Nullable error);

@class BindingsAppServices;

@class BindingsBackupService;

@class BindingsChannelsWatcherJobController;

@class BindingsJobController;

@class BindingsLogger;

@class BindingsNativeBackupProvider;

/**
 * AppServices defined the interface needed in Breez library in order to functional
right.
 */
@interface BindingsAppServices : NSObject <goSeqRefInterface, BindingsAppServices> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (NSString* _Nonnull)backupProviderName;
- (NSString* _Nonnull)backupProviderSignIn:(NSError* _Nullable* _Nullable)error;
- (void)notify:(NSData* _Nullable)notificationEvent;
@end

/**
 * BackupService is an service to this libary for backup execution.
 */
@interface BindingsBackupService : NSObject <goSeqRefInterface, BindingsBackupService> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (BOOL)backup:(NSString* _Nullable)files nodeID:(NSString* _Nullable)nodeID backupID:(NSString* _Nullable)backupID error:(NSError* _Nullable* _Nullable)error;
@end

/**
 * ChannelsWatcherJobController is the interface to return when scheuling the channels watcher job to
allow the caller to cancel at any time
 */
@interface BindingsChannelsWatcherJobController : NSObject <goSeqRefInterface, BindingsChannelsWatcherJobController> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (BOOL)run:(BOOL* _Nullable)ret0_ error:(NSError* _Nullable* _Nullable)error;
- (void)stop;
@end

/**
 * JobController is the interface to return when scheuling a job to allow the caller to cancel at
any time
 */
@interface BindingsJobController : NSObject <goSeqRefInterface, BindingsJobController> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (BOOL)run:(NSError* _Nullable* _Nullable)error;
- (void)stop;
@end

/**
 * Logger is an interface that is used to log to the central log file.
 */
@interface BindingsLogger : NSObject <goSeqRefInterface, BindingsLogger> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)log:(NSString* _Nullable)msg lvl:(NSString* _Nullable)lvl;
@end

/**
 * NativeBackupProvider is interface that serves as backup provider and is intended to be
implemented by the native platform and injected to breez library.
It is usefull when it is more nature to implement the provider in the native environment
rather than in go API.
 */
@interface BindingsNativeBackupProvider : NSObject <goSeqRefInterface, BindingsNativeBackupProvider> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (NSString* _Nonnull)availableSnapshots:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)downloadBackupFiles:(NSString* _Nullable)nodeID backupID:(NSString* _Nullable)backupID error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)uploadBackupFiles:(NSString* _Nullable)file nodeID:(NSString* _Nullable)nodeID encryptionType:(NSString* _Nullable)encryptionType error:(NSError* _Nullable* _Nullable)error;
@end

#endif
