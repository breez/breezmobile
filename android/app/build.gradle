def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 32

    def keystoreProperties = new Properties()
    def keystorePropertiesFile = rootProject.file('key.properties')
    if (keystorePropertiesFile.exists()) {
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    }

    lint {
        disable 'InvalidPackage'
        checkReleaseBuilds false
    }

    defaultConfig {
        applicationId "com.breez.client"
        minSdkVersion 24
        targetSdkVersion 32
        multiDexEnabled true
        versionCode 1
        versionName "0.12-beta"
    }

    signingConfigs {
        release {
            String filePath = keystoreProperties['storeFile']
            if (filePath != null) {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(filePath)
                storePassword keystoreProperties['storePassword']
            } else {
                println("No storeFile provided, release builds are not possible")
            }
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-DEBUG'
            resValue "string", "app_name", "Breez Debug"
        }
        release {
            signingConfig signingConfigs.release
            shrinkResources false
            resValue "string", "app_name", "Breez"
        }
    }

    flavorDimensions "breez"
    productFlavors {
        client {
            dimension "breez"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

flutter {
    source '../..'
}

configurations {
    all*.exclude group: 'com.google.guava', module: 'listenablefuture'
}

dependencies {
    implementation(name: 'breez', ext: 'aar')

    implementation('com.google.api-client:google-api-client-android:1.33.1') {
        exclude group: 'org.apache.httpcomponents'
    }
    implementation('com.google.apis:google-api-services-drive:v3-rev197-1.25.0') {
        exclude group: 'org.apache.httpcomponents'
    }
    implementation('commons-io:commons-io:2.11.0') {
        exclude group: 'com.google.guava', module: 'listenablefuture'
    }

    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.biometric:biometric:1.1.0'
    implementation 'androidx.exifinterface:exifinterface:1.3.3'
    implementation 'androidx.lifecycle:lifecycle-process:2.4.0'
    implementation 'androidx.work:work-runtime:2.7.1'
    implementation 'com.felipecsl:gifimageview:2.1.0'
    implementation 'com.google.android.gms:play-services-auth:20.0.1'
    implementation 'com.google.android.gms:play-services-drive:17.0.0'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'com.theartofdev.edmodo:android-image-cropper:2.8.0'

    implementation platform('com.google.firebase:firebase-bom:29.0.4')
    implementation 'com.google.firebase:firebase-messaging'
}

apply plugin: 'com.google.gms.google-services'
